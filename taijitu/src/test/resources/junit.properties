# Database section
# It is useful to separate database information into a different file.
# But be aware to use the right database references in tests
include.file.database=junit_database.properties


# Comparisons section
# Comparison name is defined by the first token. Here, 'test1' is defined
# Comparison section 1: queries (source and target)
# Queries must have que query statement and a database reference:
runtime.test1.source.query=select * from test
runtime.test1.source.database=test
runtime.test1.target.query=select * from test
runtime.test1.target.database=test2
#Optionally, you can provide a name for queries. Just used for reporting. If not provide, test name will be used.
runtime.test1.source.name=Get_all_from_test
runtime.test1.target.name=Get_all_from_test2
# Comparison section 2: fields
# Should define three values: fields (token), compare and key
# `fields` define the columns to be involved in runtime. Query should return (at least) those fields.
runtime.test1.fields=KEY,VALUE
# `compare' sets the fields that will be compared. `key` fields may be provided, but won't be compared.
runtime.test1.fields.compare=KEY,VALUE
# `key` fields are used to identify matching records. Keep in mind key fields should have no duplicated values!
runtime.test1.fields.key=KEY
# Comparison section 3: setup
# You can also provide some behaviour configuration to the runtime. (see setup section)
runtime.setup.fetchSize=255
runtime.test1.setup.parameters.name=not_used
# Note that not all `setup` fields are meaningful at runtime level! (i.e. threads)
# Now, some examples on alternative runtime definition
# You can reuse properties by defining them in upper hierarchy levels.
# Following defined the same query for both source and target (note 'source'/'target' is missing):
runtime.test2.query=select * from test
runtime.test2.source.database=test
runtime.test2.target.database=test2
# You can also skip defining `fields` for queries. Then, fields will be automagically retrieved from query results
#runtime.test2.fields=...
# Both 'compare' and 'key' fields default to 'fields'. So, you need not to provide them if using the same.
#runtime.test2.fields.compare=...
#runtime.test2.fields.key=...


# Setup section
# Default test behaviour...
#setup.outputFolder     = log
setup.fetchSize=1024
setup.consoleLog=INFO
setup.fileLog=DEBUT
setup.precisionThreshold=0
setup.queryOptimization=true
#setup.plugins   = taijituStatsWriter,taijituSQLProvider
# And default query parameters
setup.parameters.testDate=20120907
# Plugins section
# Those depend on plugins as defined in `setup.plugins`
# Writer configuration
plugin.output.format_csv=false
plugin.output.format_xsl=false
plugin.output.stats=false
#sqlProvider
#sqlProvider.outputFile = taijitu.sql